name: Merge onto Develop Pipeline

on:
  push:
    branches:
      - develop

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          build: yarn build
          start: yarn start
          browser: chrome
          spec: cypress/**/*.cy.tsx
          headed: false
          wait-on: 'http://localhost:3000'
          env:
            NEXT_PUBLIC_ROLLBAR_ENV: CI
            NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
            NEXT_PUBLIC_ROLLBAR_CLIENT_TOKEN: ${{ secrets.NEXT_PUBLIC_ROLLBAR_CLIENT_TOKEN }}
            NEXT_PUBLIC_STORYBLOK_TOKEN: ${{ secrets.NEXT_PUBLIC_STORYBLOK_TOKEN }}
            NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
            NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
            NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
            NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}}
            NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
            NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}
            CYPRESS_login_path: "auth/login",
            CYPRESS_reset-password-path: "auth/reset-password",
            CYPRESS_mail-slurp-api-key: "bde69db8499813f157cfaba1d127a676e34a8a5228a12cc0d82ed62d64937073",
            CYPRESS_inbox-id: "f7ac78a8-71da-4a8d-ad10-aa565bd05a66",
            CYPRESS_reset-pwd-content-email: "f7ac78a8-71da-4a8d-ad10-aa565bd05a66@mailslurp.com",
            CYPRESS_reset-pwd-confirm-email: "test@test.com"

  create-pr-to-main:
    runs-on: ubuntu-latest
    steps:
      - name: Create Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const pullRequestResponse = await github.rest.pulls.list({
              owner,
              repo,
              base: 'main'
            });

            console.log(pullRequestResponse); // TODO remove once we know this is working and why
            if (pullRequestResponse.status === 200 && pullRequestResponse.data.length === 0) {
              const result = await github.rest.pulls.create({
                title: 'Merge Develop onto Main',
                owner,
                repo,
                head: 'develop',
                base: 'main',
                body: [
                  'This PR is auto-generated by',
                  '[actions/github-script](https://github.com/actions/github-script).'
                ].join('\n')
              });
            }
  deploy-to-staging:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_STAGING_APP}} #Must be unique in Heroku
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          branch: 'develop'
